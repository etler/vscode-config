[
  // Navigate editors in sidebar order
  {
    "key": "ctrl+tab",
    "command": "workbench.action.nextEditor"
  },
  {
    "key": "ctrl+tab",
    "command": "-workbench.action.quickOpenPreviousRecentlyUsedEditorInGroup"
  },
  {
    "key": "ctrl+pagedown",
    "command": "-workbench.action.nextEditor"
  },
  {
    "key": "ctrl+shift+tab",
    "command": "workbench.action.previousEditor"
  },
  {
    "key": "ctrl+shift+tab",
    "command": "-workbench.action.quickOpenLeastRecentlyUsedEditorInGroup"
  },
  {
    "key": "ctrl+pageup",
    "command": "-workbench.action.previousEditor"
  },
  // Navigate editors in recency order
  {
    "key": "alt+left",
    "command": "workbench.action.openPreviousRecentlyUsedEditorInGroup"
  },
  {
    "key": "alt+right",
    "command": "workbench.action.openNextRecentlyUsedEditorInGroup"
  },
  // Go to next change from commit
  {
    "key": "alt+down",
    "command": "workbench.action.editor.nextChange",
    "when": "editorTextFocus"
  },
  {
    "key": "alt+f5",
    "command": "-workbench.action.editor.nextChange",
    "when": "editorTextFocus"
  },
  {
    "key": "alt+down",
    "command": "editor.action.diffReview.next",
    "when": "isInDiffEditor"
  },
  {
    "key": "f7",
    "command": "-editor.action.diffReview.next",
    "when": "isInDiffEditor"
  },
  // Go to previous change from commit
  {
    "key": "alt+up",
    "command": "workbench.action.editor.previousChange",
    "when": "editorTextFocus"
  },
  {
    "key": "shift+alt+f5",
    "command": "-workbench.action.editor.previousChange",
    "when": "editorTextFocus"
  },
  {
    "key": "alt+up",
    "command": "editor.action.diffReview.prev",
    "when": "isInDiffEditor"
  },
  {
    "key": "shift+f7",
    "command": "-editor.action.diffReview.prev",
    "when": "isInDiffEditor"
  },
  // Close bottom panel from any context
  {
    "key": "escape",
    "command": "workbench.action.closePanel",
    "when": "panelFocus"
  },
  {
    "key": "escape",
    "command": "workbench.action.closePanel",
    "when": "editorFocus && !editorHasSelection && !editorHasMultipleSelections && !inlineSuggestionVisible && !selectionAnchorSet && !breakpointWidgetVisible && !selectionAnchorSet && !cancellableOperation && !exceptionWidgetVisible && !inSearchEditor && !findInputFocussed && !suggestWidgetVisible"
  },
  // Open file in project
  {
    "key": "ctrl+t",
    "command": "workbench.action.quickOpen"
  },
  {
    "key": "ctrl+t",
    "command": "-workbench.action.showAllSymbols"
  },
  {
    "key": "ctrl+e",
    "command": "-workbench.action.quickOpen"
  },
  // Open command pallet
  {
    "key": "ctrl+shift+t",
    "command": "workbench.action.showCommands"
  },
  {
    "key": "ctrl+shift+t",
    "command": "-workbench.action.reopenClosedEditor"
  },
  {
    "key": "ctrl+shift+p",
    "command": "-workbench.action.showCommands"
  },
  // Go to symbol in file
  {
    "key": "ctrl+shift+g",
    "command": "workbench.action.showAllSymbols"
  },
  // Open panel terminal
  {
    "key": "alt+`",
    "command": "workbench.action.terminal.toggleTerminal",
    "when": "terminal.active"
  },
  {
    "key": "ctrl+`",
    "command": "-workbench.action.terminal.toggleTerminal",
    "when": "terminal.active"
  },
  {
    "key": "ctrl+shift+pagedown",
    "command": "-workbench.action.moveEditorRightInGroup"
  },
  // Disable close window
  {
    "key": "ctrl+shift+w",
    "command": "-workbench.action.closeWindow"
  },
  // Move lines up
  {
    "key": "ctrl+shift+up",
    "command": "editor.action.moveLinesUpAction",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "ctrl+shift+up",
    "command": "-editor.action.insertCursorAbove",
    "when": "editorTextFocus"
  },
  {
    "key": "alt+up",
    "command": "-editor.action.moveLinesUpAction",
    "when": "editorTextFocus && !editorReadonly"
  },
  // Move lines down
  {
    "key": "ctrl+shift+down",
    "command": "editor.action.moveLinesDownAction",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "ctrl+shift+down",
    "command": "-editor.action.insertCursorBelow",
    "when": "editorTextFocus"
  },
  {
    "key": "alt+down",
    "command": "-editor.action.moveLinesDownAction",
    "when": "editorTextFocus && !editorReadonly"
  },
  // Convert highlighted lines to multi cursor
  {
    "key": "ctrl+shift+l",
    "command": "editor.action.insertCursorAtEndOfEachLineSelected",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+shift+l",
    "command": "-editor.action.selectHighlights",
    "when": "editorFocus"
  },
  {
    "key": "shift+alt+i",
    "command": "-editor.action.insertCursorAtEndOfEachLineSelected",
    "when": "editorTextFocus"
  },
  // Add multi cursor to all text matching highlight
  {
    "key": "ctrl+shift+a",
    "command": "editor.action.selectHighlights"
  },
  {
    "key": "ctrl+shift+a",
    "command": "-editor.action.blockComment",
    "when": "editorTextFocus && !editorReadonly"
  },
  // Comment line
  {
    "key": "ctrl+shift+/",
    "command": "editor.action.blockComment",
    "when": "editorTextFocus && !editorReadonly"
  },
  // Jump to start/end of bracket
  {
    "key": "ctrl+m",
    "command": "editor.action.jumpToBracket",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+m",
    "command": "-editor.action.toggleTabFocusMode"
  },
  {
    "key": "ctrl+shift+\\",
    "command": "-editor.action.jumpToBracket",
    "when": "editorTextFocus"
  },
  // Select bracket contents
  {
    "key": "ctrl+shift+m",
    "command": "editor.action.selectToBracket",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+shift+m",
    "command": "-workbench.actions.view.problems",
    "when": "workbench.panel.markers.view.active"
  },
  {
    "key": "shift+alt+right",
    "command": "-editor.action.smartSelect.expand",
    "when": "editorTextFocus"
  },
  // Delete highlighted line
  {
    "key": "shift+delete",
    "command": "editor.action.deleteLines",
    "when": "textInputFocus && !editorReadonly"
  },
  {
    "key": "ctrl+shift+k",
    "command": "-editor.action.deleteLines",
    "when": "textInputFocus && !editorReadonly"
  },
  // Copy selection
  {
    "key": "ctrl+shift+d",
    "command": "editor.action.duplicateSelection"
  },
  {
    "key": "ctrl+shift+d",
    "command": "-workbench.view.debug",
    "when": "viewContainer.workbench.view.debug.enabled"
  },
  // Navigate to definition
  {
    "key": "alt+enter",
    "command": "editor.action.revealDefinition",
    "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor"
  },
  {
    "key": "f12",
    "command": "-editor.action.revealDefinition",
    "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor"
  },
  // Fold code block
  {
    "key": "ctrl+[",
    "command": "editor.fold",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "ctrl+[",
    "command": "-editor.action.outdentLines",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "ctrl+shift+[",
    "command": "-editor.fold",
    "when": "editorTextFocus && foldingEnabled"
  },
  // Unfold code block
  {
    "key": "ctrl+]",
    "command": "editor.unfold",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "ctrl+]",
    "command": "-editor.action.indentLines",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "ctrl+shift+]",
    "command": "-editor.unfold",
    "when": "editorTextFocus && foldingEnabled"
  },
  // Fold code block recursively
  {
    "key": "ctrl+shift+[",
    "command": "editor.foldRecursively",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "ctrl+k ctrl+[",
    "command": "-editor.foldRecursively",
    "when": "editorTextFocus && foldingEnabled"
  },
  // Unfold code block recursively
  {
    "key": "ctrl+shift+]",
    "command": "editor.unfoldRecursively",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "ctrl+k ctrl+]",
    "command": "-editor.unfoldRecursively",
    "when": "editorTextFocus && foldingEnabled"
  },
  // Open local git project
  {
    "key": "ctrl+p",
    "command": "gitProjectManager.openProject"
  },
  {
    "key": "ctrl+p",
    "command": "-workbench.action.quickOpen"
  },
  {
    "key": "ctrl+alt+p",
    "command": "-gitProjectManager.openProject"
  },
  // Open local git project in a new window
  {
    "key": "ctrl+shift+p",
    "command": "gitProjectManager.openProjectNewWindow"
  },
  {
    "key": "ctrl+alt+n",
    "command": "-gitProjectManager.openProjectNewWindow"
  },
  {
    "key": "ctrl+shift+q",
    "command": "-gitProjectManager.openRecents"
  },
  // Evaluate selected text equation
  {
    "key": "alt+c",
    "command": "extension.calculateReplace"
  },
  {
    "key": "alt+c",
    "command": "-toggleFindCaseSensitive",
    "when": "editorFocus"
  },
  // Append evaluation of selected text equation
  {
    "key": "alt+=",
    "command": "extension.calculate"
  },
  // Go to next code block space
  {
    "key": "ctrl+pagedown",
    "command": "spaceBlockJumper.moveDown"
  },
  // Go to previous code block space
  {
    "key": "ctrl+pageup",
    "command": "spaceBlockJumper.moveUp"
  },
  // Go to next code block space
  {
    "key": "ctrl+shift+pagedown",
    "command": "spaceBlockJumper.selectDown"
  },
  // Select to previous code block space
  {
    "key": "ctrl+shift+pageup",
    "command": "spaceBlockJumper.selectUp"
  },
  // Select to next code block space
  {
    "key": "ctrl+shift+pageup",
    "command": "-workbench.action.moveEditorLeftInGroup"
  },
  // Add a log line for selected text
  {
    "key": "shift+alt+l",
    "command": "turboConsoleLog.displayLogMessage"
  },
  {
    "key": "ctrl+alt+l",
    "command": "-turboConsoleLog.displayLogMessage"
  },
  // Create markdown checkbox
  {
    "key": "ctrl+enter",
    "command": "markdown-checkbox.createCheckbox",
    "when": "editorTextFocus && editorLangId == 'markdown'"
  },
  {
    "key": "ctrl+shift+c",
    "command": "-markdown-checkbox.createCheckbox",
    "when": "editorTextFocus"
  },
  // Toggle markdown checkbox
  {
    "key": "ctrl+space",
    "command": "markdown-checkbox.markCheckbox",
    "when": "editorTextFocus  && editorLangId == 'markdown'"
  },
  {
    "key": "ctrl+shift+enter",
    "command": "-markdown-checkbox.markCheckbox",
    "when": "editorTextFocus"
  },
  // Disable settings shortcut
  {
    "key": "ctrl+,",
    "command": "-workbench.action.openSettings"
  },
  // Change editor layout
  {
    "key": "ctrl+alt+1",
    "command": "workbench.action.editorLayoutSingle"
  },
  {
    "key": "ctrl+alt+2",
    "command": "workbench.action.editorLayoutTwoColumns"
  },
  {
    "key": "ctrl+alt+3",
    "command": "workbench.action.editorLayoutThreeColumns"
  },
  {
    "key": "ctrl+alt+4",
    "command": "workbench.action.editorLayoutTwoByTwoGrid"
  },
  // Move editor to group
  {
    "key": "ctrl+alt+pageup",
    "command": "workbench.action.moveEditorToFirstGroup"
  },
  {
    "key": "shift+alt+1",
    "command": "-workbench.action.moveEditorToFirstGroup"
  },
  {
    "key": "ctrl+alt+pagedown",
    "command": "workbench.action.moveEditorToLastGroup"
  },
  {
    "key": "shift+alt+9",
    "command": "-workbench.action.moveEditorToLastGroup"
  },
  {
    "key": "ctrl+q",
    "command": "-workbench.action.quit"
  }
]
